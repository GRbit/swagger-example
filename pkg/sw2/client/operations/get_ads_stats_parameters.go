// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAdsStatsParams creates a new GetAdsStatsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAdsStatsParams() *GetAdsStatsParams {
	return &GetAdsStatsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAdsStatsParamsWithTimeout creates a new GetAdsStatsParams object
// with the ability to set a timeout on a request.
func NewGetAdsStatsParamsWithTimeout(timeout time.Duration) *GetAdsStatsParams {
	return &GetAdsStatsParams{
		timeout: timeout,
	}
}

// NewGetAdsStatsParamsWithContext creates a new GetAdsStatsParams object
// with the ability to set a context for a request.
func NewGetAdsStatsParamsWithContext(ctx context.Context) *GetAdsStatsParams {
	return &GetAdsStatsParams{
		Context: ctx,
	}
}

// NewGetAdsStatsParamsWithHTTPClient creates a new GetAdsStatsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAdsStatsParamsWithHTTPClient(client *http.Client) *GetAdsStatsParams {
	return &GetAdsStatsParams{
		HTTPClient: client,
	}
}

/*
GetAdsStatsParams contains all the parameters to send to the API endpoint

	for the get ads stats operation.

	Typically these are written to a http.Request.
*/
type GetAdsStatsParams struct {

	// XRequestID.
	XRequestID string

	// AccountID.
	//
	// Format: int64
	AccountID int64

	// AdIds.
	AdIds []int64

	// ClientID.
	//
	// Format: int64
	ClientID *int64

	/* DateFrom.

	   If presented, return only statistics starting from presented date in Unixtime

	   Format: int64
	*/
	DateFrom *int64

	/* DateTo.

	   If presented, return only statistics up to presented date in Unixtime

	   Format: int64
	*/
	DateTo *int64

	/* Fields.

	   Enumeration wanted parameters of requested object
	*/
	Fields []string

	/* UpdatedSince.

	   If presented, return only statistics up to presented date in Unixtime

	   Format: int64
	*/
	UpdatedSince *int64

	// UserID.
	//
	// Format: int64
	UserID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get ads stats params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAdsStatsParams) WithDefaults() *GetAdsStatsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get ads stats params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAdsStatsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get ads stats params
func (o *GetAdsStatsParams) WithTimeout(timeout time.Duration) *GetAdsStatsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get ads stats params
func (o *GetAdsStatsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get ads stats params
func (o *GetAdsStatsParams) WithContext(ctx context.Context) *GetAdsStatsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get ads stats params
func (o *GetAdsStatsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get ads stats params
func (o *GetAdsStatsParams) WithHTTPClient(client *http.Client) *GetAdsStatsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get ads stats params
func (o *GetAdsStatsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXRequestID adds the xRequestID to the get ads stats params
func (o *GetAdsStatsParams) WithXRequestID(xRequestID string) *GetAdsStatsParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the get ads stats params
func (o *GetAdsStatsParams) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithAccountID adds the accountID to the get ads stats params
func (o *GetAdsStatsParams) WithAccountID(accountID int64) *GetAdsStatsParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the get ads stats params
func (o *GetAdsStatsParams) SetAccountID(accountID int64) {
	o.AccountID = accountID
}

// WithAdIds adds the adIds to the get ads stats params
func (o *GetAdsStatsParams) WithAdIds(adIds []int64) *GetAdsStatsParams {
	o.SetAdIds(adIds)
	return o
}

// SetAdIds adds the adIds to the get ads stats params
func (o *GetAdsStatsParams) SetAdIds(adIds []int64) {
	o.AdIds = adIds
}

// WithClientID adds the clientID to the get ads stats params
func (o *GetAdsStatsParams) WithClientID(clientID *int64) *GetAdsStatsParams {
	o.SetClientID(clientID)
	return o
}

// SetClientID adds the clientId to the get ads stats params
func (o *GetAdsStatsParams) SetClientID(clientID *int64) {
	o.ClientID = clientID
}

// WithDateFrom adds the dateFrom to the get ads stats params
func (o *GetAdsStatsParams) WithDateFrom(dateFrom *int64) *GetAdsStatsParams {
	o.SetDateFrom(dateFrom)
	return o
}

// SetDateFrom adds the dateFrom to the get ads stats params
func (o *GetAdsStatsParams) SetDateFrom(dateFrom *int64) {
	o.DateFrom = dateFrom
}

// WithDateTo adds the dateTo to the get ads stats params
func (o *GetAdsStatsParams) WithDateTo(dateTo *int64) *GetAdsStatsParams {
	o.SetDateTo(dateTo)
	return o
}

// SetDateTo adds the dateTo to the get ads stats params
func (o *GetAdsStatsParams) SetDateTo(dateTo *int64) {
	o.DateTo = dateTo
}

// WithFields adds the fields to the get ads stats params
func (o *GetAdsStatsParams) WithFields(fields []string) *GetAdsStatsParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the get ads stats params
func (o *GetAdsStatsParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithUpdatedSince adds the updatedSince to the get ads stats params
func (o *GetAdsStatsParams) WithUpdatedSince(updatedSince *int64) *GetAdsStatsParams {
	o.SetUpdatedSince(updatedSince)
	return o
}

// SetUpdatedSince adds the updatedSince to the get ads stats params
func (o *GetAdsStatsParams) SetUpdatedSince(updatedSince *int64) {
	o.UpdatedSince = updatedSince
}

// WithUserID adds the userID to the get ads stats params
func (o *GetAdsStatsParams) WithUserID(userID int64) *GetAdsStatsParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the get ads stats params
func (o *GetAdsStatsParams) SetUserID(userID int64) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *GetAdsStatsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param X-RequestID
	if err := r.SetHeaderParam("X-RequestID", o.XRequestID); err != nil {
		return err
	}

	// path param account_id
	if err := r.SetPathParam("account_id", swag.FormatInt64(o.AccountID)); err != nil {
		return err
	}

	if o.AdIds != nil {

		// binding items for ad_ids
		joinedAdIds := o.bindParamAdIds(reg)

		// query array param ad_ids
		if err := r.SetQueryParam("ad_ids", joinedAdIds...); err != nil {
			return err
		}
	}

	if o.ClientID != nil {

		// query param client_id
		var qrClientID int64

		if o.ClientID != nil {
			qrClientID = *o.ClientID
		}
		qClientID := swag.FormatInt64(qrClientID)
		if qClientID != "" {

			if err := r.SetQueryParam("client_id", qClientID); err != nil {
				return err
			}
		}
	}

	if o.DateFrom != nil {

		// query param date_from
		var qrDateFrom int64

		if o.DateFrom != nil {
			qrDateFrom = *o.DateFrom
		}
		qDateFrom := swag.FormatInt64(qrDateFrom)
		if qDateFrom != "" {

			if err := r.SetQueryParam("date_from", qDateFrom); err != nil {
				return err
			}
		}
	}

	if o.DateTo != nil {

		// query param date_to
		var qrDateTo int64

		if o.DateTo != nil {
			qrDateTo = *o.DateTo
		}
		qDateTo := swag.FormatInt64(qrDateTo)
		if qDateTo != "" {

			if err := r.SetQueryParam("date_to", qDateTo); err != nil {
				return err
			}
		}
	}

	if o.Fields != nil {

		// binding items for fields
		joinedFields := o.bindParamFields(reg)

		// query array param fields
		if err := r.SetQueryParam("fields", joinedFields...); err != nil {
			return err
		}
	}

	if o.UpdatedSince != nil {

		// query param updated_since
		var qrUpdatedSince int64

		if o.UpdatedSince != nil {
			qrUpdatedSince = *o.UpdatedSince
		}
		qUpdatedSince := swag.FormatInt64(qrUpdatedSince)
		if qUpdatedSince != "" {

			if err := r.SetQueryParam("updated_since", qUpdatedSince); err != nil {
				return err
			}
		}
	}

	// query param user_id
	qrUserID := o.UserID
	qUserID := swag.FormatInt64(qrUserID)
	if qUserID != "" {

		if err := r.SetQueryParam("user_id", qUserID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetAdsStats binds the parameter ad_ids
func (o *GetAdsStatsParams) bindParamAdIds(formats strfmt.Registry) []string {
	adIdsIR := o.AdIds

	var adIdsIC []string
	for _, adIdsIIR := range adIdsIR { // explode []int64

		adIdsIIV := swag.FormatInt64(adIdsIIR) // int64 as string
		adIdsIC = append(adIdsIC, adIdsIIV)
	}

	// items.CollectionFormat: ""
	adIdsIS := swag.JoinByFormat(adIdsIC, "")

	return adIdsIS
}

// bindParamGetAdsStats binds the parameter fields
func (o *GetAdsStatsParams) bindParamFields(formats strfmt.Registry) []string {
	fieldsIR := o.Fields

	var fieldsIC []string
	for _, fieldsIIR := range fieldsIR { // explode []string

		fieldsIIV := fieldsIIR // string as string
		fieldsIC = append(fieldsIC, fieldsIIV)
	}

	// items.CollectionFormat: ""
	fieldsIS := swag.JoinByFormat(fieldsIC, "")

	return fieldsIS
}
