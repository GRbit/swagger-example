// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDelAccUpdaterParams creates a new DelAccUpdaterParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDelAccUpdaterParams() *DelAccUpdaterParams {
	return &DelAccUpdaterParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDelAccUpdaterParamsWithTimeout creates a new DelAccUpdaterParams object
// with the ability to set a timeout on a request.
func NewDelAccUpdaterParamsWithTimeout(timeout time.Duration) *DelAccUpdaterParams {
	return &DelAccUpdaterParams{
		timeout: timeout,
	}
}

// NewDelAccUpdaterParamsWithContext creates a new DelAccUpdaterParams object
// with the ability to set a context for a request.
func NewDelAccUpdaterParamsWithContext(ctx context.Context) *DelAccUpdaterParams {
	return &DelAccUpdaterParams{
		Context: ctx,
	}
}

// NewDelAccUpdaterParamsWithHTTPClient creates a new DelAccUpdaterParams object
// with the ability to set a custom HTTPClient for a request.
func NewDelAccUpdaterParamsWithHTTPClient(client *http.Client) *DelAccUpdaterParams {
	return &DelAccUpdaterParams{
		HTTPClient: client,
	}
}

/*
DelAccUpdaterParams contains all the parameters to send to the API endpoint

	for the del acc updater operation.

	Typically these are written to a http.Request.
*/
type DelAccUpdaterParams struct {

	// XRequestID.
	XRequestID string

	// AccountID.
	//
	// Format: int64
	AccountID int64

	// ClientID.
	//
	// Format: int64
	ClientID *int64

	// UserID.
	//
	// Format: int64
	UserID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the del acc updater params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DelAccUpdaterParams) WithDefaults() *DelAccUpdaterParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the del acc updater params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DelAccUpdaterParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the del acc updater params
func (o *DelAccUpdaterParams) WithTimeout(timeout time.Duration) *DelAccUpdaterParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the del acc updater params
func (o *DelAccUpdaterParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the del acc updater params
func (o *DelAccUpdaterParams) WithContext(ctx context.Context) *DelAccUpdaterParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the del acc updater params
func (o *DelAccUpdaterParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the del acc updater params
func (o *DelAccUpdaterParams) WithHTTPClient(client *http.Client) *DelAccUpdaterParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the del acc updater params
func (o *DelAccUpdaterParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXRequestID adds the xRequestID to the del acc updater params
func (o *DelAccUpdaterParams) WithXRequestID(xRequestID string) *DelAccUpdaterParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the del acc updater params
func (o *DelAccUpdaterParams) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithAccountID adds the accountID to the del acc updater params
func (o *DelAccUpdaterParams) WithAccountID(accountID int64) *DelAccUpdaterParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the del acc updater params
func (o *DelAccUpdaterParams) SetAccountID(accountID int64) {
	o.AccountID = accountID
}

// WithClientID adds the clientID to the del acc updater params
func (o *DelAccUpdaterParams) WithClientID(clientID *int64) *DelAccUpdaterParams {
	o.SetClientID(clientID)
	return o
}

// SetClientID adds the clientId to the del acc updater params
func (o *DelAccUpdaterParams) SetClientID(clientID *int64) {
	o.ClientID = clientID
}

// WithUserID adds the userID to the del acc updater params
func (o *DelAccUpdaterParams) WithUserID(userID int64) *DelAccUpdaterParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the del acc updater params
func (o *DelAccUpdaterParams) SetUserID(userID int64) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *DelAccUpdaterParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param X-RequestID
	if err := r.SetHeaderParam("X-RequestID", o.XRequestID); err != nil {
		return err
	}

	// path param account_id
	if err := r.SetPathParam("account_id", swag.FormatInt64(o.AccountID)); err != nil {
		return err
	}

	if o.ClientID != nil {

		// query param client_id
		var qrClientID int64

		if o.ClientID != nil {
			qrClientID = *o.ClientID
		}
		qClientID := swag.FormatInt64(qrClientID)
		if qClientID != "" {

			if err := r.SetQueryParam("client_id", qClientID); err != nil {
				return err
			}
		}
	}

	// query param user_id
	qrUserID := o.UserID
	qUserID := swag.FormatInt64(qrUserID)
	if qUserID != "" {

		if err := r.SetQueryParam("user_id", qUserID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
