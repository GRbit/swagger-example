// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/grbit/swagger-example/pkg/sw2/model"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetCampaignsStatsReader is a Reader for the GetCampaignsStats structure.
type GetCampaignsStatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCampaignsStatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCampaignsStatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCampaignsStatsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCampaignsStatsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCampaignsStatsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCampaignsStatsOK creates a GetCampaignsStatsOK with default headers values
func NewGetCampaignsStatsOK() *GetCampaignsStatsOK {
	return &GetCampaignsStatsOK{}
}

/*
GetCampaignsStatsOK describes a response with status code 200, with default header values.

pages of Campaign
*/
type GetCampaignsStatsOK struct {
	Payload *GetCampaignsStatsOKBody
}

// IsSuccess returns true when this get campaigns stats o k response has a 2xx status code
func (o *GetCampaignsStatsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get campaigns stats o k response has a 3xx status code
func (o *GetCampaignsStatsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get campaigns stats o k response has a 4xx status code
func (o *GetCampaignsStatsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get campaigns stats o k response has a 5xx status code
func (o *GetCampaignsStatsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get campaigns stats o k response a status code equal to that given
func (o *GetCampaignsStatsOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetCampaignsStatsOK) Error() string {
	return fmt.Sprintf("[GET /{account_id}/campaigns][%d] getCampaignsStatsOK  %+v", 200, o.Payload)
}

func (o *GetCampaignsStatsOK) String() string {
	return fmt.Sprintf("[GET /{account_id}/campaigns][%d] getCampaignsStatsOK  %+v", 200, o.Payload)
}

func (o *GetCampaignsStatsOK) GetPayload() *GetCampaignsStatsOKBody {
	return o.Payload
}

func (o *GetCampaignsStatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCampaignsStatsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCampaignsStatsBadRequest creates a GetCampaignsStatsBadRequest with default headers values
func NewGetCampaignsStatsBadRequest() *GetCampaignsStatsBadRequest {
	return &GetCampaignsStatsBadRequest{}
}

/*
GetCampaignsStatsBadRequest describes a response with status code 400, with default header values.

bad request 400
*/
type GetCampaignsStatsBadRequest struct {
	Payload *model.ErrorResponse
}

// IsSuccess returns true when this get campaigns stats bad request response has a 2xx status code
func (o *GetCampaignsStatsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get campaigns stats bad request response has a 3xx status code
func (o *GetCampaignsStatsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get campaigns stats bad request response has a 4xx status code
func (o *GetCampaignsStatsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get campaigns stats bad request response has a 5xx status code
func (o *GetCampaignsStatsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get campaigns stats bad request response a status code equal to that given
func (o *GetCampaignsStatsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetCampaignsStatsBadRequest) Error() string {
	return fmt.Sprintf("[GET /{account_id}/campaigns][%d] getCampaignsStatsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCampaignsStatsBadRequest) String() string {
	return fmt.Sprintf("[GET /{account_id}/campaigns][%d] getCampaignsStatsBadRequest  %+v", 400, o.Payload)
}

func (o *GetCampaignsStatsBadRequest) GetPayload() *model.ErrorResponse {
	return o.Payload
}

func (o *GetCampaignsStatsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCampaignsStatsUnauthorized creates a GetCampaignsStatsUnauthorized with default headers values
func NewGetCampaignsStatsUnauthorized() *GetCampaignsStatsUnauthorized {
	return &GetCampaignsStatsUnauthorized{}
}

/*
GetCampaignsStatsUnauthorized describes a response with status code 401, with default header values.

unauthorized 400
*/
type GetCampaignsStatsUnauthorized struct {
	Payload *model.ErrorResponse
}

// IsSuccess returns true when this get campaigns stats unauthorized response has a 2xx status code
func (o *GetCampaignsStatsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get campaigns stats unauthorized response has a 3xx status code
func (o *GetCampaignsStatsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get campaigns stats unauthorized response has a 4xx status code
func (o *GetCampaignsStatsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get campaigns stats unauthorized response has a 5xx status code
func (o *GetCampaignsStatsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get campaigns stats unauthorized response a status code equal to that given
func (o *GetCampaignsStatsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetCampaignsStatsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{account_id}/campaigns][%d] getCampaignsStatsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCampaignsStatsUnauthorized) String() string {
	return fmt.Sprintf("[GET /{account_id}/campaigns][%d] getCampaignsStatsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCampaignsStatsUnauthorized) GetPayload() *model.ErrorResponse {
	return o.Payload
}

func (o *GetCampaignsStatsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCampaignsStatsInternalServerError creates a GetCampaignsStatsInternalServerError with default headers values
func NewGetCampaignsStatsInternalServerError() *GetCampaignsStatsInternalServerError {
	return &GetCampaignsStatsInternalServerError{}
}

/*
GetCampaignsStatsInternalServerError describes a response with status code 500, with default header values.

internal server error 500
*/
type GetCampaignsStatsInternalServerError struct {
	Payload *model.ErrorResponse
}

// IsSuccess returns true when this get campaigns stats internal server error response has a 2xx status code
func (o *GetCampaignsStatsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get campaigns stats internal server error response has a 3xx status code
func (o *GetCampaignsStatsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get campaigns stats internal server error response has a 4xx status code
func (o *GetCampaignsStatsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get campaigns stats internal server error response has a 5xx status code
func (o *GetCampaignsStatsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get campaigns stats internal server error response a status code equal to that given
func (o *GetCampaignsStatsInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetCampaignsStatsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{account_id}/campaigns][%d] getCampaignsStatsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCampaignsStatsInternalServerError) String() string {
	return fmt.Sprintf("[GET /{account_id}/campaigns][%d] getCampaignsStatsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCampaignsStatsInternalServerError) GetPayload() *model.ErrorResponse {
	return o.Payload
}

func (o *GetCampaignsStatsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetCampaignsStatsOKBody get campaigns stats o k body
swagger:model GetCampaignsStatsOKBody
*/
type GetCampaignsStatsOKBody struct {

	// campaigns
	Campaigns *model.CampaignStatsPage `json:"campaigns,omitempty"`
}

// Validate validates this get campaigns stats o k body
func (o *GetCampaignsStatsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCampaigns(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCampaignsStatsOKBody) validateCampaigns(formats strfmt.Registry) error {
	if swag.IsZero(o.Campaigns) { // not required
		return nil
	}

	if o.Campaigns != nil {
		if err := o.Campaigns.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCampaignsStatsOK" + "." + "campaigns")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCampaignsStatsOK" + "." + "campaigns")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get campaigns stats o k body based on the context it is used
func (o *GetCampaignsStatsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateCampaigns(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCampaignsStatsOKBody) contextValidateCampaigns(ctx context.Context, formats strfmt.Registry) error {

	if o.Campaigns != nil {
		if err := o.Campaigns.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getCampaignsStatsOK" + "." + "campaigns")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getCampaignsStatsOK" + "." + "campaigns")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCampaignsStatsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCampaignsStatsOKBody) UnmarshalBinary(b []byte) error {
	var res GetCampaignsStatsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
